var dataset = ee.ImageCollection('ESA/WorldCover/v200').first().select('Map');
print(dataset)
var visualization = {
  bands: ['Map'],
};


Map.addLayer(dataset.clip(roi), visualization, 'Landcover');

// Sample the input imagery to get a FeatureCollection of training data.
var training = l8.addBands(dataset).sample({
  region: roi,
  numPixels: 5000,
  scale: 30,
  seed: 0
});

print(training)
// Make a Random Forest classifier and train it.
var classifier = ee.Classifier.smileRandomForest(10)
    .train({
      features: training,
      classProperty: 'Map',
      inputProperties: l8.bandNames()})

// Classify the input imagery.
var classified = l8.classify(classifier);

// Get a confusion matrix representing resubstitution accuracy.
var trainAccuracy = classifier.confusionMatrix();
print('Resubstitution error matrix: ', trainAccuracy);
print('Training overall accuracy: ', trainAccuracy.accuracy());


// Sample the input with a different random seed to get validation data.
var validation = l8.addBands(dataset).sample({
  region: roi,
  numPixels: 5000,
  scale: 30,
  seed: 1
  // Filter the result to get rid of any null pixels.
}).filter(ee.Filter.notNull(l8.bandNames()));

// Classify the validation data.
var validated = validation.classify(classifier);

// Get a confusion matrix representing expected accuracy.
var testAccuracy = validated.errorMatrix('Map', 'classification');
print('Validation error matrix: ', testAccuracy);
print('Validation overall accuracy: ', testAccuracy.accuracy());

// Define a palette for the IGBP classification.
var esaPalette = [
  '006400',	//Tree cover
  'ffbb22',	//Shrubland
  'ffff4c',//	Grassland
  'f096ff', //	Cropland
  'fa0000', //	Built-up
  'b4b4b4',	//Bare / sparse vegetation
  'f0f0f0',	//Snow and ice
  '0064c8', //	Permanent water bodies
  '0096a0', //	Herbaceous wetland
  '00cf75',	//Mangroves
  'fae6a0',	//Moss and lichen
];

Map.addLayer(classified.clip(roi),
             {palette: esaPalette, min: 1, max: 11},
             'classification');
             
             