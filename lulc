/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[8.803167429792586, 45.69714087137378],
          [8.803167429792586, 45.27447682040372],
          [9.61752900205821, 45.27447682040372],
          [9.61752900205821, 45.69714087137378]]], null, false),
    imageVisParam = {"opacity":1,"bands":["SR_B4","SR_B3","SR_B2"],"min":0.8321419775485992,"max":1.419758039712906,"gamma":1};
/***** End of imports. If edited, may not auto-convert in the playground. *****/
function maskClouds(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = 1 << 3;
  var cloudsBitMask = 1 << 5;
  // Get the pixel QA band.
  var qa = image.select('QA_PIXEL');
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  // Return the masked image, scaled to reflectance, without the QA bands.
  return image.updateMask(mask).divide(10000)
      .copyProperties(image, ["system:time_start"]);
}
var l8 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2") 
         .filterDate("2023-01-01", "2023-12-12")
         .filterMetadata("CLOUD_COVER", "less_than", 30)
         .map(maskClouds)
         .median()
         .clip(roi);
         
print(l8)
         
Map.addLayer(l8, {}, 'Natural colour')